basePath: /api/v1
definitions:
  models.CreateAdminRequest:
    properties:
      email:
        type: string
      name:
        type: string
      organization:
        type: string
    required:
    - email
    - name
    - organization
    type: object
  models.CreateAdminResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
    type: object
  models.DisableAPIKeyResponse:
    properties:
      id:
        type: string
      revoked:
        type: boolean
    type: object
  models.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  models.UpdateUserPoolRequest:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      schema:
        additionalProperties: true
        type: object
    required:
    - name
    - schema
    type: object
  models.UpdateUserPoolResponse:
    properties:
      id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication and credential management APIs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: AuthX API
  version: "1.0"
paths:
  /api/v1/admin/owners:
    post:
      consumes:
      - application/json
      description: Create a new admin in the system
      parameters:
      - description: Admin input
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.CreateAdminRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateAdminResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create an admin
      tags:
      - admins
  /api/v1/admin/owners/{adminId}/apikeys/{apiKey}/disable:
    patch:
      consumes:
      - application/json
      description: Marks an API key as revoked (revoked=true) for a specific owner/admin.
      parameters:
      - description: Owner/Admin ID
        in: path
        name: adminId
        required: true
        type: string
      - description: API Key value to disable
        in: path
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API Key revoked successfully
          schema:
            $ref: '#/definitions/models.DisableAPIKeyResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Disable an API key
      tags:
      - owners
  /api/v1/admin/user-pools/{userpoolId}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing user pool identified by its ID. Only the owner
        with a valid API key can perform this action.
      parameters:
      - description: Owner API Key
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: User Pool ID
        in: path
        name: userpoolId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User pool not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to delete user pool
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user pool
      tags:
      - userpools
    patch:
      consumes:
      - application/json
      description: Updates the name or schema of an existing user pool identified
        by its ID. The owner is authenticated via X-API-KEY.
      parameters:
      - description: Owner API Key
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: User Pool ID
        in: path
        name: userpoolId
        required: true
        type: string
      - description: Updated User Pool data
        in: body
        name: userPool
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserPoolRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserPoolResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User pool not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to update user pool
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user pool
      tags:
      - userpools
schemes:
- http
- https
swagger: "2.0"
