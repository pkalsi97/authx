definitions:
  models.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  models.Owner:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      organization:
        type: string
      updated_at:
        type: string
    type: object
  models.OwnerAPIKey:
    properties:
      created_at:
        type: string
      id:
        type: string
      key_hash:
        type: string
      owner_id:
        type: string
      revoked:
        type: boolean
    type: object
  models.OwnerInput:
    properties:
      email:
        type: string
      name:
        type: string
      organization:
        type: string
    type: object
  models.UserPool:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      schema:
        additionalProperties: true
        type: object
      updated_at:
        type: string
    type: object
  models.UserPoolInput:
    properties:
      name:
        type: string
      schema:
        additionalProperties: true
        type: object
    type: object
info:
  contact: {}
paths:
  /api/v1/admin/owners:
    post:
      consumes:
      - application/json
      description: Create a new owner in the system
      parameters:
      - description: Owner input
        in: body
        name: owner
        required: true
        schema:
          $ref: '#/definitions/models.OwnerInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Owner'
        "400":
          description: invalid Request Body
          schema:
            type: string
        "500":
          description: Failed to insert owner
          schema:
            type: string
      summary: Create an owner
      tags:
      - owners
  /api/v1/admin/owners/{adminId}/apikeys/{apiKey}/disable:
    patch:
      consumes:
      - application/json
      description: Marks an API key as revoked (revoked=true) for a specific owner/admin.
      parameters:
      - description: Owner/Admin ID
        in: path
        name: adminId
        required: true
        type: string
      - description: API Key value to disable
        in: path
        name: apiKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated API Key with revoked=true
          schema:
            $ref: '#/definitions/models.OwnerAPIKey'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Disable an API key
      tags:
      - owners
  /api/v1/admin/user-pools/{userpoolId}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing user pool identified by its ID. Only the owner
        with a valid API key can perform this action.
      parameters:
      - description: Owner API Key
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: User Pool ID
        in: path
        name: userpoolId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User pool not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to delete user pool
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user pool
      tags:
      - userpools
    patch:
      consumes:
      - application/json
      description: Updates the name or schema of an existing user pool identified
        by its ID. The owner is authenticated via X-API-KEY.
      parameters:
      - description: Owner API Key
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: User Pool ID
        in: path
        name: userpoolId
        required: true
        type: string
      - description: Updated User Pool data
        in: body
        name: userPool
        required: true
        schema:
          $ref: '#/definitions/models.UserPoolInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserPool'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User pool not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to update user pool
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user pool
      tags:
      - userpools
  /api/v1/admin/user-pools/create:
    post:
      consumes:
      - application/json
      description: Creates a new user pool for the owner identified by the API key.
        The schema will be stored as JSON.
      parameters:
      - description: Owner API Key
        in: header
        name: X-API-KEY
        required: true
        type: string
      - description: User Pool input
        in: body
        name: userPool
        required: true
        schema:
          $ref: '#/definitions/models.UserPoolInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserPool'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create user pool
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user pool
      tags:
      - userpools
swagger: "2.0"
