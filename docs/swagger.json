{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/admin/owners": {
            "post": {
                "description": "Create a new owner in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Create an owner",
                "parameters": [
                    {
                        "description": "Owner input",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OwnerInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    },
                    "400": {
                        "description": "invalid Request Body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to insert owner",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/owners/{adminId}/apikeys/{apiKey}/disable": {
            "patch": {
                "description": "Marks an API key as revoked (revoked=true) for a specific owner/admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owners"
                ],
                "summary": "Disable an API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner/Admin ID",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key value to disable",
                        "name": "apiKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated API Key with revoked=true",
                        "schema": {
                            "$ref": "#/definitions/models.OwnerAPIKey"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/user-pools/create": {
            "post": {
                "description": "Creates a new user pool for the owner identified by the API key. The schema will be stored as JSON.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userpools"
                ],
                "summary": "Create a new user pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner API Key",
                        "name": "X-API-KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User Pool input",
                        "name": "userPool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPoolInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserPool"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create user pool",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/user-pools/{userpoolId}": {
            "delete": {
                "description": "Deletes an existing user pool identified by its ID. Only the owner with a valid API key can perform this action.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userpools"
                ],
                "summary": "Delete a user pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner API Key",
                        "name": "X-API-KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Pool ID",
                        "name": "userpoolId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid API Key",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User pool not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete user pool",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the name or schema of an existing user pool identified by its ID. The owner is authenticated via X-API-KEY.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "userpools"
                ],
                "summary": "Update a user pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner API Key",
                        "name": "X-API-KEY",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Pool ID",
                        "name": "userpoolId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated User Pool data",
                        "name": "userPool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPoolInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserPool"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User pool not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update user pool",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Owner": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OwnerAPIKey": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key_hash": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "revoked": {
                    "type": "boolean"
                }
            }
        },
        "models.OwnerInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                }
            }
        },
        "models.UserPool": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserPoolInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        }
    }
}